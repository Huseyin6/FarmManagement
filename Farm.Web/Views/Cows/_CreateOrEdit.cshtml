@model CowsViewModel
@Html.AntiForgeryToken()
<div class="panel panel-default">
    <div class="panel-body">
        <div class="form-group">
            @Html.LabelFor(m => m.EaringNo, "Küpe No", new { @class = "col-lg-3 col-xl-2 control-label " })
            <div class="col-md-6" style="margin-bottom:15px">
                <div class="form-line">
                    @Html.EditorFor(m => m.EaringNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Lütfen küpe no giriniz" } })
                </div>
            </div>
            @Html.ValidationMessageFor(m => m.EaringNo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group" style="margin-bottom:15px">
            @Html.LabelFor(m => m.Name, "Adı", new { @class = "col-lg-3 col-xl-2 control-label" })
            <div class="col-md-6">
                <div class="form-line">
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Lütfen adı giriniz" } })
                </div>
            </div>
        </div>
        <div class="form-group" style="margin-bottom:15px">
            @Html.LabelFor(m => m.BirthDate, "Doğum Tarihi", new { @class = "col-lg-3 col-xl-2 control-label " })
            <div class="col-md-6">
                <div class="form-line" id="bs_datepicker_container">
                    @Html.EditorFor(m => m.BirthDate, new { htmlAttributes = new { @Value = Model.BirthDate.ToString("dd/MM/yyyy"), @class = "form-control", placeholder = "Lütfen Tarih Giriniz..." } })
                </div>
            </div>
        </div>
        <div class="form-group" style="margin-bottom:15px">
            @Html.LabelFor(m => m.StateId, "Durumu", new { @class = "col-lg-3 col-xl-2 control-label " })
            <div class="col-md-6 form-inline" id="state-select-list">
                @Html.DropDownListFor(m => m.StateId, Model.StateSelectList, new { htmlAttributes = new { @class = " bootstrap-select form-control show-tick" } })
            </div>
        </div>
        <div class="form-group" style="margin-bottom:15px">
            @Html.LabelFor(m => m.PregnantDate, "Aşı Tarihi", new { @class = "col-lg-3 col-xl-2 control-label " })
            <div class="col-md-6">
                <div class="form-line" id="bs_datepicker_container">
                    @Html.EditorFor(m => m.PregnantDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Lütfen Tarih Giriniz..." } })
                </div>
            </div>
        </div>
        <div class="form-group" style="margin-bottom:15px">
            @Html.LabelFor(m => m.IsPregnant, "Hamile", new { @class = "col-lg-3 col-xl-2 control-label" })
            <div class="col-md-4" style="margin-bottom:10px;margin-top:5px">
                @Html.CheckBoxFor(m => m.IsPregnant, new { @class = "switch" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.IsLactation, "Laktasyonda", new { @class = "col-lg-3 col-xl-2 control-label" })
            <div class="col-md-4">
                @Html.CheckBoxFor(m => m.IsLactation, new { @class = "switch" })
            </div>
        </div>
        <div class="form-group" style="margin-top:10px">
            <div class="col-md-12">
                <div class="modal-footer">
                    @Html.SaveButtons(Url.Action("Index", "Cows"))
                    @Html.CancelButton(Url.Action("Index", "Cows"))
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    function AddError(text, classname) {
        var errorHtml = `
            <div class="alert alert-danger alert-dismissible ">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                ${text}
            </div>`
        $('.' + classname).prepend(errorHtml);
    }

    $(function () {
        $("form").submit(function (e) {
            if ($('#IsPregnant').bootstrapSwitch('state')===true && $('#PregnantDate').val() == "") {
                AddError("hata", 'panel-body');
                return false;
                event.preventDefault();
            }
        });

    });
</script>